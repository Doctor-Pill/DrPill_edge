import os
import cv2
import subprocess
import signal
import time
import multiprocessing

# ========== 설정 ==========
# DEVICE_USB = "/dev/webcam"
# DEVICE_PICAM = "/dev/picam"
DEVICE_USB = "/dev/video2"
DEVICE_PICAM = "/dev/video0"
MJPEG_SCRIPT = "src/streaming/mjpeg_streamer.py"
PORT_USB = 8001
PORT_PICAM = 8002

os.environ["DISPLAY"] = ":0"

# ========== 공통 유틸 ==========
def free_device(device_path):
    try:
        result = subprocess.check_output(["fuser", device_path])
        pids = result.decode().strip().split()
        for pid in pids:
            if int(pid) != os.getpid():
                os.kill(int(pid), signal.SIGKILL)
                print(f"⚡ {device_path} 점유 중인 프로세스 {pid} 종료")
                time.sleep(1)
    except subprocess.CalledProcessError:
        print(f"✅ {device_path}는 점유되지 않음")

def try_open_camera(device_path, retries=2):
    for i in range(retries):
        cap = cv2.VideoCapture(device_path, cv2.CAP_V4L2)
        time.sleep(0.5)
        if cap.isOpened():
            print(f"✅ 카메라 열기 성공: {device_path}")
            return cap
        if i == 0:
            print(f"⚠️ 첫 시도 실패 → 점유 해제 시도: {device_path}")
            free_device(device_path)
    print(f"❌ 카메라 열기 실패: {device_path}")
    return None

# ========== 스트리밍 루프 ==========
def streaming_loop(device_path):
    print("🧪 MJPEG 스트리밍 프로세스 시작")
    cap = try_open_camera(device_path)
    if not cap or not cap.isOpened():
        print("❌ cap 열기 실패 후 루프 종료")
        return

    cv2.namedWindow("Camera Stream", cv2.WND_PROP_FULLSCREEN)
    cv2.setWindowProperty("Camera Stream", cv2.WND_PROP_FULLSCREEN, cv2.WINDOW_FULLSCREEN)

    while True:
        ret, frame = cap.read()
        if not ret:
            print("⚠️ 프레임 읽기 실패")
            break

        frame = cv2.flip(frame, 1)
        cv2.imshow("Camera Stream", frame)

        # 송신은 MJPEG 서버가 처리함
        key = cv2.waitKey(1)
        if key == 27:
            print("🛑 ESC 눌림")
            break

    cap.release()
    cv2.destroyAllWindows()
    time.sleep(0.5)
    print("🧊 스트리밍 루프 종료")

# ========== 프로세스 관리 ==========
stream_proc = None
mjpeg_proc = None

def start_streaming(device_path, port, label):
    global stream_proc, mjpeg_proc
    stop_all_streaming()

    # MJPEG 서버 시작
    print(f"🚀 {label} MJPEG 서버 실행")
    mjpeg_proc = subprocess.Popen(
        ["python3", MJPEG_SCRIPT, device_path, str(port)],
        stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL
    )

    # 로컬 스트리밍 루프 (옵션)
    stream_proc = multiprocessing.Process(target=streaming_loop, args=(device_path,))
    stream_proc.start()
    print(f"✅ {label} 로컬 디스플레이 시작")

def start_usb_streaming():
    start_streaming(DEVICE_USB, PORT_USB, "USB")

def start_picam_streaming():
    start_streaming(DEVICE_PICAM, PORT_PICAM, "PiCam")

def stop_all_streaming():
    global stream_proc, mjpeg_proc
    if stream_proc and stream_proc.is_alive():
        print("🛑 로컬 스트리밍 중단 요청")
        stream_proc.terminate()
        stream_proc.join()
    stream_proc = None

    if mjpeg_proc and mjpeg_proc.poll() is None:
        print("🛑 MJPEG 서버 중단 요청")
        mjpeg_proc.terminate()
        mjpeg_proc.wait()
    mjpeg_proc = None
